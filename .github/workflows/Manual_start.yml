name: Manual_start

on:
#  schedule:
#    - cron: "0 * * * *"
  workflow_dispatch:
    inputs:
      Path:
        description: 'Path to Table'
        required: true
      Path_file:
        description: 'Path to file'
        required: true
      ALWAYS_SEND:
        description: 'ALWAYS_SEND'
        required: true
      CHANNEL:
        description: 'CHANNEL'
        required: true
      id:
        description: 'run identifier'
        required: false
      EMAILS:
        description: 'where to send emails'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DQ_INSTAL }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
      - name: ${{github.event.inputs.id}}
        run: echo run identifier ${{ inputs.id }}
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'
      - run:  pip install git+ssh://git@github.com/Palta-Data-Platform/soda_tests.git
      - name: run main
        env:
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_USER_META: ${{ secrets.SNOWFLAKE_USER_META }}
          SNOWFLAKE_PASSWORD_META: ${{ secrets.SNOWFLAKE_PASSWORD_META }}
          SNOWFLAKE_ACCOUNT_META: ${{ secrets.SNOWFLAKE_ACCOUNT_META }}
          SNOWFLAKE_WAREHOUSE_META: ${{ secrets.SNOWFLAKE_WAREHOUSE_META }}
          SODA_CLOUD: ${{ secrets.SODA_CLOUD }}
          API_KEY_ID_SODA: ${{ secrets.API_KEY_ID_SODA }}
          API_KEY_SECRET_SODA: ${{ secrets.API_KEY_SECRET_SODA }}
          CHANNEL: ${{ secrets.CHANNEL }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          CHANNEL_CUSTOM:  ${{ github.event.inputs.CHANNEL }}
          COMPANY:  ${{ secrets.COMPANY }}
          EMAILS: ${{ github.event.inputs.EMAILS }}
          API_KEY_ATLAN: ${{ secrets.API_KEY_ATLAN }}
          DOMMEN_ATLAN: ${{ secrets.DOMMEN_ATLAN }}
          PATH_TO_TABLE: ${{ github.event.inputs.Path }}
          SCHEDULE: Manual
          ALWAYS_SEND: ${{ github.event.inputs.ALWAYS_SEND }}
          RUN_INDENTIFIER: ${{github.event.inputs.id}}
        run: |
          python3 main.py
      - name: 'Upload Artifact'
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.inputs.Path_file }}
          retention-days: 10
          path: temp/*

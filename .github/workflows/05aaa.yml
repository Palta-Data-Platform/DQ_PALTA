name: 0 5 * * *
on:
  schedule:
  - cron: 0 5 * * *
  workflow_dispatch:
    inputs:
      logLevel:
        description: Log level
        required: true
        default: warning
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        table_path:
        - simple_data.dm_marketing.f_ad_spend
        - zing_data.dm_marketing.f_ad_spend
        - zing_data.dm_dashboard.f_user_activity
        - simple_data.dm_dashboard.f_user_activity
        - simple_data.dm_dashboard.f_product_ltv
        - palta_data.dm_dashboard.f_user_activity
        - simple_data.stg_finance.f_revenuecat_event
        - simple_data.stg_finance.f_source_refund
        - simple_data.stg_finance.f_revenuecat_subscription
        - simple_data.dm_finance.f_transaction
        - simple_data.dm_finance.f_subscription
        - simple_data.stg_finance.d_stripe_price_archive
        - simple_data.dm_finance.stripe__subscription_details
        - simple_data.dm_finance.stripe__balance_transactions
        - simple_data.dm_finance.stripe__daily_overview
        - simple_data.dm_finance.stripe__quarterly_overview
        - simple_data.dm_finance.stripe__monthly_overview
        - simple_data.dm_finance.stripe__customer_overview
        - simple_data.dm_finance.stripe__invoice_line_items
        - simple_data.dm_finance.stripe__weekly_overview
        - simple_data.dm_finance.d_product
        - zing_data.dm_finance.f_subscription
        - SNOWFLAKE.ACCOUNT_USAGE.WAREHOUSE_METERING_HISTORY
        - simple_data.dm_dashboard.f_conversion_mobile
        - simple_data.dm_dashboard.f_retention_rate
        - simple_data.dm_dashboard.f_conversion_web
        - simple_data.dm_dashboard.f_conversion_from_open_to_subscription
        - simple_data.dm_dashboard.f_revenue_and_subscription
        - zing_data.dm_dashboard.f_revenue_and_subscription
        - zing_data.dm_dashboard.f_conversion_mobile
        - zing_data.dm_dashboard.f_retention_rate
        - zing_data.dm_dashboard.f_product_ltv
        - zing_data.dm_dashboard.f_conversion_web
        - zing_data.dm_dashboard.f_conversion_from_open_to_subscription
        - palta_data.dm_dashboard.f_revenue_and_subscription
        - palta_data.dm_dashboard.f_conversion_mobile
        - palta_data.dm_dashboard.f_product_ltv
        - palta_data.dm_dashboard.f_conversion_from_open_to_subscription
        - palta_data.dm_dashboard.f_retention_rate
    steps:
    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.DQ_INSTAL }}
        known_hosts: just-a-placeholder-so-we-dont-get-errors
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: 'python -m pip install --upgrade pip

        pip install git+ssh://git@github.com/Palta-Data-Platform/paltabrain_dq_services.git

        '
    - name: run main
      env:
        SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
        SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
        SNOWFLAKE_USER_META: ${{ secrets.SNOWFLAKE_USER_META }}
        SNOWFLAKE_PASSWORD_META: ${{ secrets.SNOWFLAKE_PASSWORD_META }}
        SNOWFLAKE_ACCOUNT_META: ${{ secrets.SNOWFLAKE_ACCOUNT_META }}
        SNOWFLAKE_WAREHOUSE_META: ${{ secrets.SNOWFLAKE_WAREHOUSE_META }}
        PASSWORD_EMAIL: ${{ secrets.PASSWORD_EMAIL }}
        SEND_EMAIL: ${{ secrets.SEND_EMAIL }}
        CHANNEL: ${{ secrets.CHANNEL }}
        COMPANY: ${{ secrets.COMPANY }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        API_KEY_ATLAN: ${{ secrets.API_KEY_ATLAN }}
        DOMMEN_ATLAN: ${{ secrets.DOMMEN_ATLAN }}
        API_KEY_ID_SODA: ${{ secrets.API_KEY_ID_SODA }}
        API_KEY_SECRET_SODA: ${{ secrets.API_KEY_SECRET_SODA }}
        PATH_TO_TABLE: ${{ matrix.table_path }}
        SCHEDULE: 0 5 * * *
        ALWAYS_SEND: 'False'
        TEST_CHANNEL: ${{ secrets.TEST_CHANNEL }}
      run: 'python3 main.py

        '
    - name: Upload Artifact
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.table_path }}
        retention-days: '10'
        path: temp/*
